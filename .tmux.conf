# Esc without delay
# vim: ft=tmux
set-option -s escape-time 50
setw -g mode-keys vi
# Vim-style copy/paste
unbind p
bind p paste-buffer
bind -t vi-copy H start-of-line
bind -t vi-copy L end-of-line
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy Escape cancel
bind-key -n S-Pageup copy-mode -eu

set -g history-limit 10000

set-option -g default-shell $SHELL
set-option -g default-command "${SHELL}"

# new feature in tmux 2.1 with new ncurses (not stable yet)
#set -g default-terminal "tmux-256color"
set -g default-terminal "screen-256color" # + "tmux -2" => 256 color
# Make it use C-a, similar to screen..
unbind C-b
unbind l
set -g prefix C-a
bind-key a send-prefix
bind-key C-a last-window
bind-key l next-window
bind-key h previous-window
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1
# Reload key
bind r source-file ~/.tmux.conf \; display 'Reloaded tmux config.'
bind-key k   confirm-before -p "kill-pane #W? (y/n)" kill-pane
bind-key K   confirm-before -p "kill-window #W? (y/n)" kill-window  

# show UTF-8 character
setw -g utf8 on

# Start numbering at 1
set -g base-index 1

# Title
set -g set-titles on
set -g set-titles-string '#S - #W'
# window number,program name, active(or not)

# disable sound bell
set -g bell-action none
# disable visual bell
set -g visual-bell off

# statusbar
set -g status-utf8 on
set -g status-interval 1
set -g status-justify left
set -g status-left-length 15
set -g status-left ' #[fg=blue,bold]#h#[default] |'
set -g status-right ' | #[fg=yellow,bold]%H:%M:%S #[fg=blue]%a %Y-%m-%d '

# default statusbar colors
set -g status-bg colour235
set -g status-fg red

# default window title colors
setw -g window-status-fg white

# active window title colors
setw -g window-status-current-fg magenta

# window activity notify color
#setw -g window-status-alert-fg green

# Window options
setw -g utf8 on
setw -g clock-mode-colour blue
setw -g clock-mode-style 24
setw -g visual-activity off
setw -g monitor-activity on
setw -g xterm-keys on
setw -g automatic-rename on
setw -g aggressive-resize on

# Mouse mode
set -g mouse on

# scroll
# Check if copy-mode or any mouse flags, then send mouse events
# or check if we're in alternate screen end send navigation keys (up, down)
bind -n WheelUpPane if-shell -Ft= '#{?pane_in_mode,1,#{mouse_any_flag}}' \
        'send -Mt=' 'if-shell -Ft= "#{alternate_on}" \
        "send -t= Up" "copy-mode -et="'
bind -n WheelDownPane if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
        'send -Mt=' 'if-shell -Ft= "#{alternate_on}" \
        "send -t= Down" "send -Mt="'

# Toggle mouse on
bind m \
    set -g mouse on \;\
    display 'Mouse: ON'

# Toggle mouse off
bind M \
    set -g mouse off \;\
    display 'Mouse: OFF'

